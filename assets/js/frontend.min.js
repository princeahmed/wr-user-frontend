/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/components/account.js":
/*!**************************************!*\
  !*** ./src/js/components/account.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

(function ($) {
  $(document).ready(function () {
    initActiveTab();
    $(document).on('click', '.change-password-button', togglePassFields);
    $(document).on('click', '.to-dashboard, .to-favourites, .to-edit-account', setActiveTab);
    $(document).on('click', '#load_more_favourites', loadMoreFavorites);

    function togglePassFields() {
      $('.change-password-fields').toggle();
    }

    function setActiveTab(e) {
      e.preventDefault();
      var selectors = $(this);
      var target = $(this).attr('data-target');
      selectors = selectors.add(target);
      $('.wp-radio-my-account-content>div, .wp-radio-my-account-navigation>ul>li').removeClass('active');
      selectors.addClass('active');
      localStorage.setItem('wp_radio_myaccount_active_tab', target);
    }

    function initActiveTab() {
      var target = localStorage.getItem('wp_radio_myaccount_active_tab');

      if (target) {
        $(target).addClass('active');
        $("li[data-target=\"".concat(target, "\"]")).addClass('active');
      } else {
        $('.content-dashboard').addClass('active');
        $("li[data-target=\".content-dashbord\"]").addClass('active');
      }
    }

    function loadMoreFavorites(e) {
      var _this = this;

      e.preventDefault();
      $('img', $(this)).show();
      var $this = $(this);
      var offset = $(this).attr('data-offset');
      $.ajax({
        url: wpradio.ajaxUrl,
        data: {
          action: 'load_more_favourites',
          offset: offset
        },
        success: function success(_ref) {
          var data = _ref.data;

          if (data && data.html) {
            $('.wp-radio-favourites').append(data.html);
            $this.attr('data-offset', offset + 15);
          } else {
            $this.text('No More Favorites!');
          }
        },
        error: function error(_error) {
          $this.text('No More Favorites!');
          console.log(_error);
        },
        complete: function complete() {
          $('img', $(_this)).hide();
        }
      });
    }
  });
})(jQuery);

/***/ }),

/***/ "./src/js/components/helper.js":
/*!*************************************!*\
  !*** ./src/js/components/helper.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

(function ($) {
  $(document).ready(function () {
    $('.wp-radio-select2').select2();
  });
})(jQuery);

/***/ }),

/***/ "./src/js/components/player.js":
/*!*************************************!*\
  !*** ./src/js/components/player.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

(function ($) {
  $(document).ready(function () {
    checkAllFavorites();
    $(document).on('click', '.add-favourite', addFavorite);
    $(window).on('setPlayerData', checkAllFavorites);
    /**
     * Add selected station to favourites list
     */

    function addFavorite() {
      if ($(this).hasClass('disabled')) {
        alert(WRUF.i18n.loginAlert);
        return;
      }

      var $this = $(this);
      var type = $this.hasClass('added') ? 'remove' : 'add';
      var parent = null;

      if ($this.parents('.wp-radio-player').length) {
        parent = $this.parents('.wp-radio-player');
      } else if ($this.parents('.wp-radio-single').length) {
        parent = $this.parents('.wp-radio-single');
      } else if ($this.parents('.wp-radio-listing').length) {
        parent = $this.parents('.wp-radio-listing');
      }

      if (!parent) {
        return;
      }

      var stream = $('.wp-radio-player-play-pause', parent).attr('data-stream');
      var streamId = JSON.parse(stream).streamId;
      $.ajax({
        url: wpradio.ajaxUrl,
        data: {
          action: 'add_favourites',
          type: type,
          id: streamId
        },
        success: function success(_ref) {
          var data = _ref.data;

          if (data.success) {
            localStorage.setItem('favorite_stations', JSON.stringify(data.favorites));
            checkAllFavorites();
          }
        },
        error: function error(_error) {
          return console.log(_error);
        }
      });
    }

    function checkAllFavorites() {
      var favorites = localStorage.getItem('favorite_stations');
      if (!favorites) return;
      favorites = JSON.parse(favorites);
      if (!Array.isArray(favorites)) return;
      var favourite = $('.add-favourite');

      if (favourite.length) {
        favourite.each(function () {
          var $this = $(this);
          var parent = null;

          if ($this.parents('.wp-radio-player').length) {
            parent = $this.parents('.wp-radio-player');
          } else if ($this.parents('.wp-radio-single').length) {
            parent = $this.parents('.wp-radio-single');
          } else if ($this.parents('.wp-radio-listing').length) {
            parent = $this.parents('.wp-radio-listing');
          }

          if (!parent) {
            return;
          }

          var stream = $('.wp-radio-player-play-pause', parent).attr('data-stream');
          if (!stream) return;
          stream = JSON.parse(stream);
          var id = parseInt(stream.streamId);
          var is_added = favorites.includes(id);
          checkFavorite(id, is_added);
        });
      }
    }
    /**
     * Check if the selected station is in favourite list or not
     */


    function checkFavorite(id, is_added) {
      //player
      var player = $('#wp-radio-player');

      if (player.length) {
        var stream = $('.wp-radio-player-play-pause', player).attr('data-stream');

        if (stream) {
          stream = JSON.parse(stream);

          if (String(id) === String(stream.streamId)) {
            if (is_added) {
              $('.add-favourite', player).addClass('added');
            } else {
              $('.add-favourite', player).removeClass('added');
            }
          }
        }
      } //shortcode


      var shortcode_player = $("#wp-radio-shortcode-player-".concat(id));

      if (shortcode_player.length) {
        if (is_added) {
          $('.add-favourite', shortcode_player).addClass('added');
        } else {
          $('.add-favourite', shortcode_player).removeClass('added');
        }
      } //single


      var single_player = $("#single-radio-".concat(id));

      if (single_player.length) {
        if (is_added) {
          $('.wp-radio-header .add-favourite', single_player).addClass('added');
        } else {
          $('.wp-radio-header .add-favourite', single_player).removeClass('added');
        }
      } //listing


      var listing_player = $(".wp-radio-listing-".concat(id));

      if (listing_player.length) {
        if (is_added) {
          $('.add-favourite', listing_player).addClass('added');
        } else {
          $('.add-favourite', listing_player).removeClass('added');
        }
      }
    }
  });
})(jQuery);

/***/ }),

/***/ "./src/js/components/report.js":
/*!*************************************!*\
  !*** ./src/js/components/report.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

(function ($) {
  $(document).ready(function () {
    var selector = $('.report-form-wrapper');

    if (!selector.length) {
      return;
    }

    var closeForm = function closeForm() {
      return selector.removeClass('active');
    };

    $(document).on('click', '.open-popup', setData);
    $(document).on('click', '.report-form', function (e) {
      return e.stopPropagation();
    });
    $(document).on('click', '.report-close', closeForm);
    $(document).on('click', '.report-form-wrapper', closeForm);
    $(document).on('click', '.report-submit', ajaxSend);

    function setData() {
      selector.addClass('active');
      var player = $(this).parents('.wp-radio-player');
      var stream = $('.wp-radio-player-play-pause', player).attr('data-stream');

      if (stream) {
        stream = JSON.parse(stream);
      }

      var title = typeof $(this).attr('data-name') !== 'undefined' ? $(this).attr('data-name') : stream.title,
          id = typeof $(this).attr('data-id') !== 'undefined' ? $(this).attr('data-id') : stream.streamId;
      $('#report-radio').text(title);
      $('#report-radio-id').val(id);
    }

    function ajaxSend(e) {
      var _this = this;

      e.preventDefault();

      if ($('#report-email').val() === '' || $('#report-message').val() === '') {
        $('#report-validation').fadeIn();
        return;
      }

      $(this).text(wpradio.i18n.sending);
      var data = $('.report-form').serialize();
      $.ajax({
        url: wpradio.ajaxUrl,
        data: {
          action: 'send_report',
          data: data,
          nonce: wpradio.nonce
        },
        success: function success() {
          $('.report-form').addClass('submitted');
          setTimeout(function () {
            selector.removeClass('active');
            $('.report-form').removeClass('submitted');
            $(_this).text(wpradio.i18n.sendMessage);
          }, 3000);
        },
        error: function error(_error) {
          return console.log(_error);
        }
      });
    }
  });
})(jQuery);

/***/ }),

/***/ "./src/js/components/review.js":
/*!*************************************!*\
  !*** ./src/js/components/review.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

(function ($) {
  $(document).ready(function () {
    $(document).on('click', '.set-review-stars>.star', setReview);
    $(document).on('click', '#review_submit', submitReview);
    $(document).on('click', '.load-more-review', loadMoreReviews);

    function setReview() {
      var selectors = $(this);
      selectors = selectors.add(selectors.prevAll());
      var de_selectors = $(this).nextAll();
      selectors.addClass('dashicons-star-filled').removeClass('dashicons-star-empty');
      de_selectors.addClass('dashicons-star-empty').removeClass('dashicons-star-filled');
      $(this).parent().next().val($(this).attr('data-rate'));
    }

    function submitReview(e) {
      e.preventDefault();

      if ($(this).hasClass('disabled')) {
        alert('Please, Login to submit a review for this radio station.');
        return;
      }

      if ($('#rating').val() === '' || $('#review').val() === '') {
        $('.review-form-notices').addClass('error show').text('Please fill all the fields.');
        return;
      }

      var formData = $('#review-form').serialize();
      $.ajax({
        url: wpradio.ajaxUrl,
        data: {
          action: 'submit_review',
          formData: formData,
          nonce: wpradio.nonce
        },
        success: function success(_ref) {
          var data = _ref.data;

          if (data.update || $('.review-listing>.current-user-review').length) {
            $('.review-listing>.current-user-review').replaceWith(data.html);
          } else {
            var title = $('.review-listing>h3');

            if (title.length) {
              title.after(data.html);
            } else {
              $('.review-listing').append(data.html);
            }
          }

          $('.review-form-notices').addClass('success show').text('Your review have been submitted.');
        },
        error: function error(_error) {
          return console.log(_error);
        }
      });
    }

    function loadMoreReviews(e) {
      e.preventDefault();
      var $this = $(this);
      var offset = $(this).attr('data-offset');
      $.ajax({
        url: wpradio.ajaxUrl,
        data: {
          action: 'load_more_reviews',
          offset: offset
        },
        success: function success(_ref2) {
          var data = _ref2.data;
          $('.review-listing').append(data.html);
          $this.attr('data-offset', offset + 10);
        },
        error: function error(_error2) {
          $this.text('No More Reviews!');
          console.log(_error2);
        }
      });
    }
  });
})(jQuery);

/***/ }),

/***/ "./src/js/frontend.js":
/*!****************************!*\
  !*** ./src/js/frontend.js ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _js_components_helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../js/components/helper */ "./src/js/components/helper.js");
/* harmony import */ var _js_components_helper__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_js_components_helper__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _js_components_player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../js/components/player */ "./src/js/components/player.js");
/* harmony import */ var _js_components_player__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_js_components_player__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _js_components_review__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../js/components/review */ "./src/js/components/review.js");
/* harmony import */ var _js_components_review__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_js_components_review__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _js_components_account__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../js/components/account */ "./src/js/components/account.js");
/* harmony import */ var _js_components_account__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_js_components_account__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _js_components_report__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../js/components/report */ "./src/js/components/report.js");
/* harmony import */ var _js_components_report__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_js_components_report__WEBPACK_IMPORTED_MODULE_4__);






/***/ }),

/***/ 0:
/*!**********************************!*\
  !*** multi ./src/js/frontend.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\xampp\htdocs\wpmilitary\wp-content\plugins\wr-user-frontend\src\js\frontend.js */"./src/js/frontend.js");


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,