/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../wp-radio/assets/js/includes/Alert.js":
/*!***********************************************!*\
  !*** ../wp-radio/assets/js/includes/Alert.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Alert; });
const {
  Modal
} = wp.components;
const {
  useState,
  useEffect
} = wp.element;
function Alert() {
  const [show, setShow] = useState(false);
  const [type, setType] = useState(false);
  const [content, setContent] = useState('');
  const [onConfirm, setOnConfirm] = useState();
  const [showConfirm, setShowConfirm] = useState(true);
  const [confirmText, setConfirmText] = useState('OK');
  const [showCancel, setShowCancel] = useState(true);
  const [cancelText, setCancelText] = useState('Cancel');
  useEffect(() => {
    wpRadioHooks.addAction('showAlert', 'wp-radio', ({
      content = '',
      onConfirm = () => {},
      type = false,
      showConfirm = true,
      confirmText = 'OK',
      showCancel = true,
      cancelText = 'Cancel'
    }) => {
      setContent(content);
      setOnConfirm(() => onConfirm);
      setType(type);
      setShowConfirm(showConfirm);
      setConfirmText(confirmText);
      setShowCancel(showCancel);
      setCancelText(cancelText);
      setShow(true);
    });
  }, []);
  let icon = 'dashicons-yes-alt';

  if (type === 'error') {
    icon = 'dashicons-dismiss';
  } else if (type === 'warning') {
    icon = 'dashicons-warning';
  } else if (type === 'info') {
    icon = 'dashicons-info';
  }

  return show ? /*#__PURE__*/React.createElement(Modal, {
    isFullScreen: true,
    shouldCloseOnEsc: true,
    shouldCloseOnClickOutside: true,
    onRequestClose: () => setShow(false),
    className: "wp-radio-alert"
  }, !!type && /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-alert-icon"
  }, /*#__PURE__*/React.createElement("span", {
    className: `dashicons ${icon} ${type}`
  })), /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-alert-content"
  }, content), /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-alert-button"
  }, showConfirm && /*#__PURE__*/React.createElement("button", {
    type: 'button',
    className: 'button wp-radio-alert-button-confirm',
    autoFocus: true,
    onClick: () => {
      onConfirm();
      setShow(false);
    }
  }, confirmText), showCancel && /*#__PURE__*/React.createElement("button", {
    type: 'button',
    className: 'button wp-radio-alert-button-cancel',
    onClick: () => setShow(false)
  }, cancelText))) : null;
}

/***/ }),

/***/ "./assets/js/components/FavoriteBtn.js":
/*!*********************************************!*\
  !*** ./assets/js/components/FavoriteBtn.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return FavoriteBtn; });
/* harmony import */ var _icons_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons.json */ "./assets/js/components/icons.json");
var _icons_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./icons.json */ "./assets/js/components/icons.json", 1);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./functions */ "./assets/js/components/functions.js");
/* harmony import */ var _wp_radio_assets_js_includes_Alert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../wp-radio/assets/js/includes/Alert */ "../wp-radio/assets/js/includes/Alert.js");
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }





var _wp$element = wp.element,
    useState = _wp$element.useState,
    useEffect = _wp$element.useEffect;
function FavoriteBtn(_ref) {
  var id = _ref.id;

  var _useState = useState(Object(_functions__WEBPACK_IMPORTED_MODULE_2__["getFavorites"])()),
      _useState2 = _slicedToArray(_useState, 2),
      favorites = _useState2[0],
      setFavorites = _useState2[1];

  var _useState3 = useState(favorites.includes(id)),
      _useState4 = _slicedToArray(_useState3, 2),
      active = _useState4[0],
      setActive = _useState4[1];

  var _useState5 = useState(false),
      _useState6 = _slicedToArray(_useState5, 2),
      showAlert = _useState6[0],
      setShowAlert = _useState6[1];

  useEffect(function () {
    setActive(favorites.includes(id));
  }, [id]);

  var handleFavorite = function handleFavorite() {
    if (WRUF.currentUserID == 0) {
      wpRadioHooks.doAction('showAlert', {
        content: wp.i18n.__('Please, login first to add the station to your favorite list.', 'wp-radio'),
        type: 'info',
        showCancel: false
      });
      return;
    }

    setActive(!active);
    wp.apiFetch({
      path: "wp-radio/v1/favorites?post_id=".concat(id, "&action=").concat(active ? 'remove' : 'add')
    }).then(function (_ref2) {
      var data = _ref2.data;
      setFavorites(data);
      localStorage.setItem('favorite_stations', JSON.stringify(data));
    });
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_wp_radio_assets_js_includes_Alert__WEBPACK_IMPORTED_MODULE_3__["default"], null), /*#__PURE__*/React.createElement("button", {
    type: "button",
    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('favorite-btn', {
      active: active
    }),
    dangerouslySetInnerHTML: {
      __html: _icons_json__WEBPACK_IMPORTED_MODULE_0__.heart
    },
    onClick: handleFavorite
  }));
}

/***/ }),

/***/ "./assets/js/components/ReportBtn.js":
/*!*******************************************!*\
  !*** ./assets/js/components/ReportBtn.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ReportBtn; });
/* harmony import */ var _icons_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons.json */ "./assets/js/components/icons.json");
var _icons_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./icons.json */ "./assets/js/components/icons.json", 1);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }


var _wp$components = wp.components,
    TextControl = _wp$components.TextControl,
    SelectControl = _wp$components.SelectControl,
    TextareaControl = _wp$components.TextareaControl,
    Modal = _wp$components.Modal,
    Notice = _wp$components.Notice,
    Spinner = _wp$components.Spinner;
var useState = wp.element.useState;
function ReportBtn(_ref) {
  var isMinimal = _ref.isMinimal,
      _ref$data = _ref.data,
      id = _ref$data.id,
      title = _ref$data.title;
  var text = isMinimal ? '' : "<span>Report a problem</span>";

  var _useState = useState({
    id: id,
    email: '',
    issue: '',
    message: ''
  }),
      _useState2 = _slicedToArray(_useState, 2),
      formData = _useState2[0],
      setFormData = _useState2[1];

  var _useState3 = useState(false),
      _useState4 = _slicedToArray(_useState3, 2),
      active = _useState4[0],
      setActive = _useState4[1];

  var _useState5 = useState(false),
      _useState6 = _slicedToArray(_useState5, 2),
      submitted = _useState6[0],
      setSubmitted = _useState6[1];

  var _useState7 = useState(false),
      _useState8 = _slicedToArray(_useState7, 2),
      loading = _useState8[0],
      setLoading = _useState8[1];

  var _useState9 = useState(null),
      _useState10 = _slicedToArray(_useState9, 2),
      errors = _useState10[0],
      setErrors = _useState10[1];

  var handleSubmit = function handleSubmit(e) {
    e.preventDefault();
    setLoading(true);
    var requires = {
      email: "<strong>Email</strong>",
      issue: "<strong>Issue</strong>",
      message: "<strong>Message</strong>"
    };
    var checkErrors = [];
    Object.keys(requires).map(function (key) {
      if (!formData[key] || formData[key] === '') {
        checkErrors.push("".concat(requires[key], " is a required."));
      }
    });

    if (checkErrors.length) {
      setLoading(false);
      setErrors(checkErrors);
      return;
    }

    wp.apiFetch({
      method: 'POST',
      path: "wp-radio/v1/report",
      data: formData
    }).then(function (_ref2) {
      var success = _ref2.success,
          data = _ref2.data;

      if (!success) {
        setErrors(data);
      }

      setErrors(null);
      setLoading(false);
      setSubmitted(true);
      setTimeout(function () {
        setActive(false);
        setSubmitted(false);
      }, 3000);
    });
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("button", {
    type: "button",
    className: "report-btn",
    dangerouslySetInnerHTML: {
      __html: "".concat(_icons_json__WEBPACK_IMPORTED_MODULE_0__.report, " ").concat(text)
    },
    onClick: function onClick() {
      return setActive(!active);
    }
  }), active && /*#__PURE__*/React.createElement(Modal, {
    title: submitted ? 'Your report successfully send.' : 'Report a Problem with Station:',
    className: "report-form",
    onRequestClose: function onRequestClose() {
      setActive(false);
      setSubmitted(false);
    },
    overlayClassName: "report-form-overlay"
  }, !!errors && !!errors.length && /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-notice-list"
  }, errors.map(function (content) {
    return /*#__PURE__*/React.createElement(Notice, {
      status: "error",
      isDismissible: true,
      onRemove: function onRemove() {
        return setErrors(errors.filter(function (text) {
          return text !== content;
        }));
      }
    }, /*#__PURE__*/React.createElement("span", {
      dangerouslySetInnerHTML: {
        __html: content
      }
    }));
  })), submitted || /*#__PURE__*/React.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-form-row report-email-field"
  }, /*#__PURE__*/React.createElement(TextControl, {
    label: "Your Email:",
    value: formData.email,
    type: "email",
    onChange: function onChange(email) {
      return setFormData(_objectSpread(_objectSpread({}, formData), {}, {
        email: email
      }));
    }
  })), /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-form-row issue-field"
  }, /*#__PURE__*/React.createElement(SelectControl, {
    label: "Select issue",
    value: formData.issue,
    onChange: function onChange(issue) {
      return setFormData(_objectSpread(_objectSpread({}, formData), {}, {
        issue: issue
      }));
    },
    options: [{
      value: '',
      label: 'Select issue',
      disabled: true
    }, {
      value: 'The page is not working',
      label: 'The page is not working'
    }, {
      value: 'Playback is not working',
      label: 'Playback is not working'
    }, {
      value: 'Address or radio data is incorrect',
      label: 'Address or radio data is incorrect'
    }, {
      value: 'The site is using an incorrect stream link',
      label: 'The site is using an incorrect stream link'
    }]
  })), /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-form-row report-message-field"
  }, /*#__PURE__*/React.createElement(TextareaControl, {
    label: "Your Message:",
    rows: 3,
    value: formData.message,
    onChange: function onChange(message) {
      return setFormData(_objectSpread(_objectSpread({}, formData), {}, {
        message: message
      }));
    }
  })), /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-form-row report-radio-field"
  }, /*#__PURE__*/React.createElement("span", null, "Radio Station:"), /*#__PURE__*/React.createElement("a", {
    href: "#",
    className: "report-radio",
    id: "report-radio"
  }, title)), /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-form-row report-submit-field"
  }, /*#__PURE__*/React.createElement("button", {
    type: "submit",
    "aria-label": "Submit",
    title: "Submit",
    className: "button report-submit"
  }, "Send Message", loading && /*#__PURE__*/React.createElement(Spinner, null))))));
}

/***/ }),

/***/ "./assets/js/components/ReportModal.js":
/*!*********************************************!*\
  !*** ./assets/js/components/ReportModal.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ReportModal; });
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var _wp$components = wp.components,
    TextControl = _wp$components.TextControl,
    SelectControl = _wp$components.SelectControl,
    TextareaControl = _wp$components.TextareaControl,
    Modal = _wp$components.Modal,
    Notice = _wp$components.Notice,
    Spinner = _wp$components.Spinner;
var _wp$element = wp.element,
    useState = _wp$element.useState,
    useEffect = _wp$element.useEffect;
function ReportModal(_ref) {
  var id = _ref.id,
      title = _ref.title,
      element = _ref.element;

  var _useState = useState({
    id: id,
    email: '',
    issue: '',
    message: ''
  }),
      _useState2 = _slicedToArray(_useState, 2),
      formData = _useState2[0],
      setFormData = _useState2[1];

  var _useState3 = useState(true),
      _useState4 = _slicedToArray(_useState3, 2),
      active = _useState4[0],
      setActive = _useState4[1];

  var _useState5 = useState(false),
      _useState6 = _slicedToArray(_useState5, 2),
      submitted = _useState6[0],
      setSubmitted = _useState6[1];

  var _useState7 = useState(false),
      _useState8 = _slicedToArray(_useState7, 2),
      loading = _useState8[0],
      setLoading = _useState8[1];

  var _useState9 = useState(null),
      _useState10 = _slicedToArray(_useState9, 2),
      errors = _useState10[0],
      setErrors = _useState10[1];

  useEffect(function () {
    if (active) return;
    ReactDOM.unmountComponentAtNode(element);
    element.remove();
  }, [active]);

  var handleSubmit = function handleSubmit(e) {
    e.preventDefault();
    setLoading(true);
    var requires = {
      email: "<strong>Email</strong>",
      issue: "<strong>Issue</strong>",
      message: "<strong>Message</strong>"
    };
    var checkErrors = [];
    Object.keys(requires).map(function (key) {
      if (!formData[key] || formData[key] === '') {
        checkErrors.push("".concat(requires[key], " is a required."));
      }
    });

    if (checkErrors.length) {
      setLoading(false);
      setErrors(checkErrors);
      return;
    }

    wp.apiFetch({
      method: 'POST',
      path: "wp-radio/v1/report",
      data: formData
    }).then(function (_ref2) {
      var success = _ref2.success,
          data = _ref2.data;

      if (!success) {
        setErrors(data);
      }

      setErrors(null);
      setLoading(false);
      setSubmitted(true);
      setTimeout(function () {
        setActive(false);
        setSubmitted(false);
      }, 3000);
    });
  };

  return !active ? null : /*#__PURE__*/React.createElement(Modal, {
    title: submitted ? 'Your report successfully send.' : 'Report a Problem with Station:',
    className: "report-form",
    onRequestClose: function onRequestClose() {
      setActive(false);
      setSubmitted(false);
    },
    overlayClassName: "report-form-overlay"
  }, !!errors && !!errors.length && /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-notice-list"
  }, errors.map(function (content) {
    return /*#__PURE__*/React.createElement(Notice, {
      status: "error",
      isDismissible: true,
      onRemove: function onRemove() {
        return setErrors(errors.filter(function (text) {
          return text !== content;
        }));
      }
    }, /*#__PURE__*/React.createElement("span", {
      dangerouslySetInnerHTML: {
        __html: content
      }
    }));
  })), submitted || /*#__PURE__*/React.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-form-row report-email-field"
  }, /*#__PURE__*/React.createElement(TextControl, {
    label: "Your Email:",
    value: formData.email,
    type: "email",
    onChange: function onChange(email) {
      return setFormData(_objectSpread(_objectSpread({}, formData), {}, {
        email: email
      }));
    }
  })), /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-form-row issue-field"
  }, /*#__PURE__*/React.createElement(SelectControl, {
    label: "Select issue",
    value: formData.issue,
    onChange: function onChange(issue) {
      return setFormData(_objectSpread(_objectSpread({}, formData), {}, {
        issue: issue
      }));
    },
    options: [{
      value: '',
      label: 'Select issue',
      disabled: true
    }, {
      value: 'The page is not working',
      label: 'The page is not working'
    }, {
      value: 'Playback is not working',
      label: 'Playback is not working'
    }, {
      value: 'Address or radio data is incorrect',
      label: 'Address or radio data is incorrect'
    }, {
      value: 'The site is using an incorrect stream link',
      label: 'The site is using an incorrect stream link'
    }]
  })), /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-form-row report-message-field"
  }, /*#__PURE__*/React.createElement(TextareaControl, {
    label: "Your Message:",
    rows: 3,
    value: formData.message,
    onChange: function onChange(message) {
      return setFormData(_objectSpread(_objectSpread({}, formData), {}, {
        message: message
      }));
    }
  })), /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-form-row report-radio-field"
  }, /*#__PURE__*/React.createElement("span", null, "Radio Station:"), /*#__PURE__*/React.createElement("a", {
    href: "#",
    className: "report-radio",
    id: "report-radio"
  }, title)), /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-form-row report-submit-field"
  }, /*#__PURE__*/React.createElement("button", {
    type: "submit",
    "aria-label": "Submit",
    title: "Submit",
    className: "button report-submit"
  }, "Send Message", loading && /*#__PURE__*/React.createElement(Spinner, null)))));
}

/***/ }),

/***/ "./assets/js/components/Reviews.js":
/*!*****************************************!*\
  !*** ./assets/js/components/Reviews.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Reviews; });
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }


var _wp$components = wp.components,
    TextareaControl = _wp$components.TextareaControl,
    Spinner = _wp$components.Spinner,
    Notice = _wp$components.Notice;
var _wp$element = wp.element,
    useState = _wp$element.useState,
    useEffect = _wp$element.useEffect,
    useRef = _wp$element.useRef;
function Reviews(_ref) {
  var _ref$data = _ref.data,
      id = _ref$data.id,
      title = _ref$data.title;
  var userID = WRUF.currentUserID;

  var _useState = useState(null),
      _useState2 = _slicedToArray(_useState, 2),
      reviews = _useState2[0],
      setReviews = _useState2[1];

  var _useState3 = useState(null),
      _useState4 = _slicedToArray(_useState3, 2),
      userReview = _useState4[0],
      setUserReview = _useState4[1];

  var _useState5 = useState(!!userReview ? userReview.rating : 0),
      _useState6 = _slicedToArray(_useState5, 2),
      selection = _useState6[0],
      setSelection = _useState6[1];

  var _useState7 = useState(false),
      _useState8 = _slicedToArray(_useState7, 2),
      loading = _useState8[0],
      setLoading = _useState8[1];

  var _useState9 = useState(null),
      _useState10 = _slicedToArray(_useState9, 2),
      errors = _useState10[0],
      setErrors = _useState10[1];

  var _useState11 = useState(false),
      _useState12 = _slicedToArray(_useState11, 2),
      submitted = _useState12[0],
      setSubmitted = _useState12[1];

  var formRef = useRef();

  function getReviews() {
    wp.apiFetch({
      path: "wp-radio/v1/reviews/?post_id=".concat(id)
    }).then(function (_ref2) {
      var data = _ref2.data;
      setReviews(data);
    });
  }

  function getUserReview() {
    if (userID == 0) return;
    wp.apiFetch({
      path: "wp-radio/v1/user-review/?post_id=".concat(id)
    }).then(function (_ref3) {
      var data = _ref3.data;
      setUserReview(data);
    });
  }

  useEffect(function () {
    getReviews();
    getUserReview();
  }, [id]);

  var onHover = function onHover(key) {
    setSelection(key);
  };

  var _onClick = function onClick(key) {
    setUserReview(_objectSpread(_objectSpread({}, userReview), {}, {
      rating: key
    }));
  };

  var onSubmit = function onSubmit(e) {
    e.preventDefault();
    setLoading(true);
    var checkErrors = [];

    if (userID == 0) {
      checkErrors.push("Please login to add a review for the station.");
    }

    if (userID != 0) {
      var requires = {
        rating: "<strong>Review Rating</strong>",
        content: "<strong>Review Description</strong>"
      };
      Object.keys(requires).map(function (key) {
        if (!!userReview && (!userReview[key] || userReview[key] === '')) {
          checkErrors.push("".concat(requires[key], " is a required."));
        }
      });
    }

    if (checkErrors.length) {
      setLoading(false);
      setErrors(checkErrors);
      formRef.current.scrollIntoView({
        behavior: 'smooth'
      });
      return;
    }

    wp.apiFetch({
      method: 'POST',
      path: "wp-radio/v1/user-review/?post_id=".concat(id),
      data: userReview
    }).then(function (success, data) {
      setLoading(false);

      if (!success) {
        setErrors(data);
      }

      setSubmitted(true);
      formRef.current.scrollIntoView({
        behavior: 'smooth'
      });
    });
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, !!reviews && !!reviews.length && /*#__PURE__*/React.createElement("div", {
    className: "review-listing"
  }, /*#__PURE__*/React.createElement("h3", {
    className: "review-listing-title"
  }, title, " reviews"), reviews.map(function (_ref4) {
    var avatar = _ref4.avatar,
        name = _ref4.name,
        rating = _ref4.rating,
        date = _ref4.date,
        content = _ref4.content;
    return /*#__PURE__*/React.createElement("div", {
      className: "single-review"
    }, /*#__PURE__*/React.createElement("div", {
      className: "reviewer-avatar",
      dangerouslySetInnerHTML: {
        __html: avatar
      }
    }), /*#__PURE__*/React.createElement("div", {
      className: "reviewer-name"
    }, /*#__PURE__*/React.createElement("span", null, name)), /*#__PURE__*/React.createElement("div", {
      className: "reviewer-rating"
    }, [1, 2, 3, 4, 5].map(function (key) {
      var icon = key <= rating ? 'filled' : 'empty';
      return /*#__PURE__*/React.createElement("i", {
        className: "dashicons star dashicons-star-".concat(icon)
      });
    })), /*#__PURE__*/React.createElement("div", {
      className: "review-date"
    }, /*#__PURE__*/React.createElement("span", null, date)), /*#__PURE__*/React.createElement("div", {
      className: "review-comments"
    }, /*#__PURE__*/React.createElement("p", null, content)));
  })), /*#__PURE__*/React.createElement("form", {
    ref: formRef,
    className: "wp-radio-form review-form",
    onSubmit: onSubmit
  }, /*#__PURE__*/React.createElement("h3", {
    className: "review-section-title"
  }, "Leave a Review"), !!errors && /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-notice-list"
  }, errors.map(function (content) {
    return /*#__PURE__*/React.createElement(Notice, {
      status: "error",
      isDismissible: true,
      onRemove: function onRemove() {
        return setErrors(errors.filter(function (text) {
          return text !== content;
        }));
      }
    }, /*#__PURE__*/React.createElement("span", {
      dangerouslySetInnerHTML: {
        __html: content
      }
    }));
  })), submitted && /*#__PURE__*/React.createElement("div", {
    className: "wp-radio-notice-list"
  }, /*#__PURE__*/React.createElement(Notice, {
    status: "success",
    onRemove: function onRemove() {
      return setSubmitted(false);
    }
  }, "Your review is successfully added.")), /*#__PURE__*/React.createElement("p", {
    className: "wp-radio-form-row wp-radio-form-row--wide set-review"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "rating"
  }, "Set your rating:"), /*#__PURE__*/React.createElement("span", {
    className: "set-review-stars",
    onMouseOut: function onMouseOut() {
      return userReview && setSelection(userReview.rating);
    }
  }, [1, 2, 3, 4, 5].map(function (key) {
    var icon = 'empty';

    if (selection) {
      if (key <= selection) {
        icon = 'filled';
      }
    } else if (userReview) {
      if (key <= userReview.rating) {
        icon = 'filled';
      }
    }

    return /*#__PURE__*/React.createElement("i", {
      className: "dashicons star dashicons-star-".concat(icon),
      onMouseOver: function onMouseOver() {
        return onHover(key);
      },
      onClick: function onClick() {
        return _onClick(key);
      }
    }, " ");
  }))), /*#__PURE__*/React.createElement("p", {
    className: "wp-radio-form-row wp-radio-form-row--wide"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "review"
  }, "Your Review:"), /*#__PURE__*/React.createElement(TextareaControl, {
    rows: 3,
    value: userReview && userReview.content,
    onChange: function onChange(content) {
      return setUserReview(_objectSpread(_objectSpread({}, userReview), {}, {
        content: content
      }));
    }
  })), /*#__PURE__*/React.createElement("p", {
    className: "wp-radio-form-row"
  }, /*#__PURE__*/React.createElement("button", {
    type: "submit",
    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()("wp-radio-button", {
      disabled: !userID
    })
  }, userReview ? 'Update' : 'Submit', " Review", loading && /*#__PURE__*/React.createElement(Spinner, null)))));
}

/***/ }),

/***/ "./assets/js/components/functions.js":
/*!*******************************************!*\
  !*** ./assets/js/components/functions.js ***!
  \*******************************************/
/*! exports provided: getFavorites */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFavorites", function() { return getFavorites; });
function getFavorites() {
  var favorites = localStorage.getItem('favorite_stations');
  if (!favorites) return [];
  favorites = JSON.parse(favorites);
  if (!Array.isArray(favorites)) return [];
  return favorites;
}

/***/ }),

/***/ "./assets/js/components/icons.json":
/*!*****************************************!*\
  !*** ./assets/js/components/icons.json ***!
  \*****************************************/
/*! exports provided: heart, report, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"heart\":\"<svg width=\\\"26\\\" height=\\\"26\\\" aria-hidden=\\\"true\\\" focusable=\\\"false\\\"  role=\\\"img\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 496 512\\\" ><path fill=\\\"currentColor\\\" d=\\\"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm123.5 272.3L260.9 394.5c-7.1 7.4-18.7 7.4-25.9 0L124.5 280.3c-32.1-33.2-30.2-88.2 5.7-118.8 31.3-26.7 77.9-21.9 106.6 7.7l11.3 11.6 11.3-11.6c28.7-29.6 75.3-34.4 106.6-7.7 35.8 30.6 37.7 85.6 5.5 118.8z\\\"></path></svg>\",\"report\":\"<svg width=\\\"26\\\" height=\\\"26\\\"  aria-hidden=\\\"true\\\" focusable=\\\"false\\\" role=\\\"img\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\" ><path fill=\\\"currentColor\\\" d=\\\"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\\\"></path></svg>\"}");

/***/ }),

/***/ "./assets/js/frontend.js":
/*!*******************************!*\
  !*** ./assets/js/frontend.js ***!
  \*******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _includes_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./includes/hooks */ "./assets/js/includes/hooks.js");
/* harmony import */ var _includes_custom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./includes/custom */ "./assets/js/includes/custom.js");
/* harmony import */ var _includes_custom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_includes_custom__WEBPACK_IMPORTED_MODULE_1__);



/***/ }),

/***/ "./assets/js/includes/custom.js":
/*!**************************************!*\
  !*** ./assets/js/includes/custom.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

;

(function ($) {
  $(document).on('ready', function () {
    //handle my-account
    $('.wp-radio-my-account-navigation a[href=#]').on('click', function (e) {
      e.preventDefault();
      var target = $(this).data('target');
      $('.wp-radio-my-account-navigation a').removeClass('active');
      $(this).addClass('active');
      $('.account-content').removeClass('active');
      $(".content-".concat(target)).addClass('active');
    }); // Password fields toggle

    $('.change-password-button').on('click', function (e) {
      e.preventDefault();
      $('.change-password-fields').toggleClass('active');
    }); // Handle edit-account form

    $('.wp-radio-form-edit-account').on('submit', function (e) {
      e.preventDefault();
      var form = $(this);
      var data = form.serialize();
      var form_message = form.find('.form-message');
      form_message.html('');
      wp.ajax.send('wp_radio_edit_account', {
        data: {
          data: data
        },
        success: function success(response) {
          if (response.success) {
            form_message.html("<p class=\"success\">".concat(response.success, "</p>"));
          }
        },
        error: function error(_error) {
          if (Array.isArray(_error)) {
            _error.forEach(function (error) {
              form_message.append("<p class=\"error\">".concat(error, "</p>"));
            });
          } else {
            console.log(_error);
          }
        }
      });
    }); // Handle station submission form
  });
})(jQuery);

/***/ }),

/***/ "./assets/js/includes/hooks.js":
/*!*************************************!*\
  !*** ./assets/js/includes/hooks.js ***!
  \*************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _components_FavoriteBtn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/FavoriteBtn */ "./assets/js/components/FavoriteBtn.js");
/* harmony import */ var _components_ReportBtn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/ReportBtn */ "./assets/js/components/ReportBtn.js");
/* harmony import */ var _components_Reviews__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/Reviews */ "./assets/js/components/Reviews.js");
/* harmony import */ var _components_ReportModal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/ReportModal */ "./assets/js/components/ReportModal.js");
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }






(function () {
  // Favorite btn
  window.wpRadioHooks.addAction('playBtn', 'wp-radio', function (parent, data, playerType) {
    if (!parent) return; //prepend favorite button

    var favBtnElement = parent.querySelector('.favorite-btn-wrap');

    if (!favBtnElement) {
      favBtnElement = document.createElement('span');
      favBtnElement.classList.add('favorite-btn-wrap');
    }

    wp.element.render( /*#__PURE__*/React.createElement(_components_FavoriteBtn__WEBPACK_IMPORTED_MODULE_0__["default"], {
      id: data.id
    }), favBtnElement);
    parent.prepend(favBtnElement); //append report btn to the player controls

    if (WRUF.enableReport) {
      if ('popup' != playerType && parent.classList.contains('wp-radio-player-controls')) {
        var reportBtnElement = parent.querySelector('.report-btn-wrap');

        if (!reportBtnElement) {
          reportBtnElement = document.createElement('span');
          reportBtnElement.classList.add('report-btn-wrap');
        }

        wp.element.render( /*#__PURE__*/React.createElement(_components_ReportBtn__WEBPACK_IMPORTED_MODULE_1__["default"], {
          isMinimal: true,
          data: data
        }), reportBtnElement);
        parent.append(reportBtnElement);
      }
    }
  }); // Handle Report Button

  window.wpRadioHooks.addAction('showReportModal', 'wp-radio', function ($this, data) {
    var element = document.createElement('div');
    wp.element.render( /*#__PURE__*/React.createElement(_components_ReportModal__WEBPACK_IMPORTED_MODULE_3__["default"], _extends({}, data, {
      element: element
    })), element);
    $this.append(element);
  }); // Single page hooks

  window.wpRadioHooks.addAction('single', 'wp-radio', function (data) {
    var reviewsElement = document.querySelector('.wp-radio-single .reviews-wrapper');

    if (reviewsElement) {
      wp.element.render( /*#__PURE__*/React.createElement(_components_Reviews__WEBPACK_IMPORTED_MODULE_2__["default"], {
        data: data
      }), reviewsElement);
    }
  });
})();

/***/ }),

/***/ "./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ 0:
/*!*************************************!*\
  !*** multi ./assets/js/frontend.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Applications/XAMPP/xamppfiles/htdocs/plugins/wp-content/plugins/wp-radio-user-frontend/assets/js/frontend.js */"./assets/js/frontend.js");


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,